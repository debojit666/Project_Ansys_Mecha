# encoding: utf-8
# 2021 R2
SetScriptVersion(Version="21.2.209")
template1 = GetTemplate(
    TemplateName="Static Structural",
    Solver="ANSYS")
system1 = template1.CreateSystem()
template2 = GetTemplate(
    TemplateName="Modal",
    Solver="ANSYS")
engineeringDataComponent1 = system1.GetComponent(Name="Engineering Data")
geometryComponent1 = system1.GetComponent(Name="Geometry")
modelComponent1 = system1.GetComponent(Name="Model")
solutionComponent1 = system1.GetComponent(Name="Solution")
componentTemplate1 = GetComponentTemplate(Name="SimulationSetupCellTemplate_StructuralModalANSYS")
system2 = template2.CreateSystem(
    ComponentsToShare=[engineeringDataComponent1, geometryComponent1, modelComponent1],
    DataTransferFrom=[Set(FromComponent=solutionComponent1, TransferName=None, ToComponentTemplate=componentTemplate1)],
    RelativeTo=system1)
system3 = template2.CreateSystem(
    Position="Below",
    RelativeTo=system1)
system3.Delete()
template3 = GetTemplate(
    TemplateName="Linear Buckling",
    Solver="ANSYS")
componentTemplate2 = GetComponentTemplate(Name="SimulationSetupCellTemplate_StructuralBucklingANSYS")
system4 = template3.CreateSystem(
    ComponentsToShare=[engineeringDataComponent1, geometryComponent1, modelComponent1],
    DataTransferFrom=[Set(FromComponent=solutionComponent1, TransferName=None, ToComponentTemplate=componentTemplate2)],
    RelativeTo=system1)
system4.Delete()
geometry1 = system1.GetContainer(ComponentName="Geometry")
geometry1.Edit()
modelComponent1.Refresh()
model1 = system1.GetContainer(ComponentName="Model")
model1.Edit()
engineeringData1 = system1.GetContainer(ComponentName="Engineering Data")
material1 = engineeringData1.GetMaterial(Name="Structural Steel")
matlProp1 = material1.GetProperty(Name="Elasticity")
matlProp1.SetVariableProperty(
    VariableName="Young's Modulus",
    Property="Unit",
    Value="MPa")
matlProp1.SetData(
    Variables=["Young's Modulus"],
    Values=[["200000 [MPa]"]])
matlProp1.SetData(
    SheetName="Elasticity",
    SheetQualifiers={"Definition": "", "Behavior": "Isotropic", "Derive from": "Young's Modulus and Poisson's Ratio"},
    Variables=["Young's Modulus"],
    Values=[["210000 [MPa]"]])
Refresh()
model1.Exit()
geometry1.Exit()
system5 = template1.CreateSystem(
    Position="Below",
    RelativeTo=system1)
engineeringDataComponent2 = system5.GetComponent(Name="Engineering Data")
geometryComponent2 = system5.GetComponent(Name="Geometry")
modelComponent2 = system5.GetComponent(Name="Model")
solutionComponent2 = system5.GetComponent(Name="Solution")
system6 = template3.CreateSystem(
    ComponentsToShare=[engineeringDataComponent2, geometryComponent2, modelComponent2],
    DataTransferFrom=[Set(FromComponent=solutionComponent2, TransferName=None, ToComponentTemplate=componentTemplate2)],
    RelativeTo=system5)
system7 = template2.CreateSystem(
    ComponentsToShare=[engineeringDataComponent2, geometryComponent2, modelComponent2],
    DataTransferFrom=[Set(FromComponent=solutionComponent2, TransferName=None, ToComponentTemplate=componentTemplate1)],
    RelativeTo=system5)
geometry2 = system5.GetContainer(ComponentName="Geometry")
geometry2.Edit()
modelComponent2.Refresh()
model2 = system5.GetContainer(ComponentName="Model")
model2.Edit()
template4 = GetTemplate(
    TemplateName="Static Structural",
    Solver="Samcef")
system8 = template4.CreateSystem(
    Position="Right",
    RelativeTo=system2)
system8.Delete()
system9 = template1.CreateSystem(
    Position="Right",
    RelativeTo=system2)
engineeringDataComponent3 = system9.GetComponent(Name="Engineering Data")
geometryComponent3 = system9.GetComponent(Name="Geometry")
modelComponent3 = system9.GetComponent(Name="Model")
solutionComponent3 = system9.GetComponent(Name="Solution")
system10 = template3.CreateSystem(
    ComponentsToShare=[engineeringDataComponent3, geometryComponent3, modelComponent3],
    DataTransferFrom=[Set(FromComponent=solutionComponent3, TransferName=None, ToComponentTemplate=componentTemplate2)],
    RelativeTo=system9)
system11 = template2.CreateSystem(
    ComponentsToShare=[engineeringDataComponent3, geometryComponent3, modelComponent3],
    DataTransferFrom=[Set(FromComponent=solutionComponent3, TransferName=None, ToComponentTemplate=componentTemplate1)],
    RelativeTo=system9)
geometry3 = system9.GetContainer(ComponentName="Geometry")
geometry3.Edit()
modelComponent3.Refresh()
model3 = system9.GetContainer(ComponentName="Model")
model3.Edit()
Save(Overwrite=True)
